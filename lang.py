# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è Pollinations AI Agent
–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–æ–≤
"""

# –°–ª–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
TRANSLATIONS = {
    'ru': {
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        'welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Pollinations AI Agent! ü§ñüé®',
        'agent_started': 'Pollinations AI Agent –∑–∞–ø—É—â–µ–Ω!',
        'agent_stopped': '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã',
        'task_processing': '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–¥–∞—á–∏...',
        'task_completed': '–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
        'task_failed': '–ó–∞–¥–∞—á–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
        'error': '–û—à–∏–±–∫–∞',
        'success': '–£—Å–ø–µ—à–Ω–æ',
        'warning': '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏
        'available_models': '–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:',
        'select_model': '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –ø–æ –Ω–æ–º–µ—Ä—É:',
        'invalid_choice': '–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –º–æ–¥–µ–ª—å.',
        'model_selected': '–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å:',
        'change_model': '–°–º–µ–Ω–∞ –º–æ–¥–µ–ª–∏',
        
        # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        'enter_task': '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É (–∏–ª–∏ \'exit\' –¥–ª—è –≤—ã—Ö–æ–¥–∞, \'change\' –¥–ª—è —Å–º–µ–Ω—ã –º–æ–¥–µ–ª–∏):',
        'enter_task_short': '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É:',
        'exit_command': 'exit',
        'change_command': 'change',
        'result': '–†–µ–∑—É–ª—å—Ç–∞—Ç:',
        'yes': '–¥–∞',
        'no': '–Ω–µ—Ç',
        'continue': '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
        'skip': '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å',
        
        # API –∏ —Ç–æ–∫–µ–Ω—ã
        'api_token_loaded': 'API —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω',
        'api_token_missing': 'API —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω',
        'api_token_required': '–î–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è API —Ç–æ–∫–µ–Ω',
        'get_token_instruction': '–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –Ω–∞: https://auth.pollinations.ai/',
        'add_token_instruction': '–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª: POLLINATIONS_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω',
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        'generating_image': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...',
        'generating_audio': '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ...',
        'image_generated': '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:',
        'audio_generated': '–ê—É–¥–∏–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:',
        'prompt': '–ü—Ä–æ–º–ø—Ç:',
        'size': '–†–∞–∑–º–µ—Ä:',
        'model': '–ú–æ–¥–µ–ª—å:',
        'voice': '–ì–æ–ª–æ—Å:',
        
        # –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
        'file_created': '–§–∞–π–ª —Å–æ–∑–¥–∞–Ω:',
        'file_read': '–§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω:',
        'file_written': '–§–∞–π–ª –∑–∞–ø–∏—Å–∞–Ω:',
        'file_deleted': '–§–∞–π–ª —É–¥–∞–ª–µ–Ω:',
        'file_moved': '–§–∞–π–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω:',
        'directory_created': '–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:',
        'directory_deleted': '–ü–∞–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞:',
        'directory_scanned': '–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞:',
        
        # –û—à–∏–±–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        'file_not_found': '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:',
        'directory_not_found': '–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:',
        'permission_denied': '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:',
        'file_exists': '–§–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:',
        'directory_exists': '–ü–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:',
        
        # –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –∑–∞–≥—Ä—É–∑–∫–∏
        'downloading': '–ó–∞–≥—Ä—É–∑–∫–∞...',
        'downloaded': '–ó–∞–≥—Ä—É–∂–µ–Ω–æ:',
        'searching': '–ü–æ–∏—Å–∫...',
        'search_completed': '–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω',
        'download_error': '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:',
        'search_error': '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:',
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        'executing_command': '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞:',
        'command_executed': '–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
        'command_failed': '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞',
        'python_code_executed': 'Python –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω',
        'system_info': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ',
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        'confirm_command': '–†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã?',
        'confirm_python': '–†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Python –∫–æ–¥–∞?',
        'confirm_registry': '–†–∞–∑—Ä–µ—à–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–µ—Å—Ç—Ä–∞?',
        'confirm_service': '–†–∞–∑—Ä–µ—à–∏—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É–∂–±–æ–π?',
        'operation_cancelled': '–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º',
        
        # –ì–æ–ª–æ—Å–∞
        'available_voices': '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥–æ–ª–æ—Å–∞:',
        'select_voice': '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è',
        'current_voice': '(—Ç–µ–∫—É—â–∏–π)',
        'voice_selected': '–í—ã–±—Ä–∞–Ω –≥–æ–ª–æ—Å:',
        'default_voice': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–æ–ª–æ—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:',
        
        # –ú–æ–¥–µ–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        'available_image_models': '–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:',
        'select_image_model': '–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è',
        'current_model': '(—Ç–µ–∫—É—â–∞—è)',
        'model_selected_img': '–í—ã–±—Ä–∞–Ω–∞ –º–æ–¥–µ–ª—å:',
        'default_model': '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:',
        
        # –ü–æ–ø—ã—Ç–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä—ã
        'attempt': '–ü–æ–ø—ã—Ç–∫–∞',
        'max_attempts': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫:',
        'retry': '–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...',
        'failed_after_attempts': '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–æ–∫:',
        
        # –Ø–∑—ã–∫–∏
        'language_selection': '–í—ã–±–æ—Ä —è–∑—ã–∫–∞ / Language Selection',
        'select_interface_language': '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:',
        'select_output_language': '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ—Ç–≤–µ—Ç–æ–≤ AI:',
        'russian': '–†—É—Å—Å–∫–∏–π',
        'english': 'English',
        'language_saved': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
        'restart_required': '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π',
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        'current_settings': '–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:',
        'change_settings': '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
        'settings_saved': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã',
        'settings_file': '–§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫:',
        
        # –û—Ç–ª–∞–¥–∫–∞
        'debug_mode': '–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏',
        'debug_info': '–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:',
        'received_data': '–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:',
        'sending_request': '–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...',
        'response_received': '–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω',
    },
    
    'en': {
        # Basic messages
        'welcome': 'Welcome to Pollinations AI Agent! ü§ñüé®',
        'agent_started': 'Pollinations AI Agent started!',
        'agent_stopped': 'Goodbye! üëã',
        'task_processing': 'Processing task...',
        'task_completed': 'Task completed successfully!',
        'task_failed': 'Task failed',
        'error': 'Error',
        'success': 'Success',
        'warning': 'Warning',
        
        # Model management
        'available_models': 'Available models:',
        'select_model': 'Select model by number:',
        'invalid_choice': 'Invalid choice, using default model.',
        'model_selected': 'Selected model:',
        'change_model': 'Change model',
        
        # Interface
        'enter_task': 'Enter your task (or \'exit\' to quit, \'change\' to change model):',
        'enter_task_short': 'Enter your task:',
        'exit_command': 'exit',
        'change_command': 'change',
        'result': 'Result:',
        'yes': 'yes',
        'no': 'no',
        'continue': 'continue',
        'skip': 'skip',
        
        # API and tokens
        'api_token_loaded': 'API token loaded',
        'api_token_missing': 'API token not found',
        'api_token_required': 'API token required for this function',
        'get_token_instruction': 'Get token at: https://auth.pollinations.ai/',
        'add_token_instruction': 'Add token to .env file: POLLINATIONS_TOKEN=your_token',
        
        # Content generation
        'generating_image': 'Generating image...',
        'generating_audio': 'Generating audio...',
        'image_generated': 'Image generated:',
        'audio_generated': 'Audio generated:',
        'prompt': 'Prompt:',
        'size': 'Size:',
        'model': 'Model:',
        'voice': 'Voice:',
        
        # File system
        'file_created': 'File created:',
        'file_read': 'File read:',
        'file_written': 'File written:',
        'file_deleted': 'File deleted:',
        'file_moved': 'File moved:',
        'directory_created': 'Directory created:',
        'directory_deleted': 'Directory deleted:',
        'directory_scanned': 'Directory scanned:',
        
        # File system errors
        'file_not_found': 'File not found:',
        'directory_not_found': 'Directory not found:',
        'permission_denied': 'Permission denied:',
        'file_exists': 'File already exists:',
        'directory_exists': 'Directory already exists:',
        
        # Internet and downloads
        'downloading': 'Downloading...',
        'downloaded': 'Downloaded:',
        'searching': 'Searching...',
        'search_completed': 'Search completed',
        'download_error': 'Download error:',
        'search_error': 'Search error:',
        
        # System operations
        'executing_command': 'Executing command:',
        'command_executed': 'Command executed',
        'command_failed': 'Command failed',
        'python_code_executed': 'Python code executed',
        'system_info': 'System information',
        
        # Confirmations
        'confirm_command': 'Allow command execution?',
        'confirm_python': 'Allow Python code execution?',
        'confirm_registry': 'Allow registry modification?',
        'confirm_service': 'Allow service management?',
        'operation_cancelled': 'Operation cancelled by user',
        
        # Voices
        'available_voices': 'Available voices:',
        'select_voice': 'Select voice or press Enter for',
        'current_voice': '(current)',
        'voice_selected': 'Selected voice:',
        'default_voice': 'Using default voice:',
        
        # Image models
        'available_image_models': 'Available image models:',
        'select_image_model': 'Select model or press Enter for',
        'current_model': '(current)',
        'model_selected_img': 'Selected model:',
        'default_model': 'Using default model:',
        
        # Attempts and retries
        'attempt': 'Attempt',
        'max_attempts': 'Maximum attempts:',
        'retry': 'Retrying...',
        'failed_after_attempts': 'Failed after attempts:',
        
        # Languages
        'language_selection': 'Language Selection / –í—ã–±–æ—Ä —è–∑—ã–∫–∞',
        'select_interface_language': 'Select interface language:',
        'select_output_language': 'Select AI response language:',
        'russian': '–†—É—Å—Å–∫–∏–π',
        'english': 'English',
        'language_saved': 'Language settings saved',
        'restart_required': 'Restart the program to apply changes',
        
        # Settings
        'settings': 'Settings',
        'current_settings': 'Current settings:',
        'change_settings': 'Change settings',
        'settings_saved': 'Settings saved',
        'settings_file': 'Settings file:',
        
        # Debug
        'debug_mode': 'Debug mode',
        'debug_info': 'Debug information:',
        'received_data': 'Received data:',
        'sending_request': 'Sending request...',
        'response_received': 'Response received',
    }
}

def get_text(key, language='ru', **kwargs):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á—É
    
    Args:
        key (str): –ö–ª—é—á —Ç–µ–∫—Å—Ç–∞
        language (str): –Ø–∑—ã–∫ ('ru' –∏–ª–∏ 'en')
        **kwargs: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    Returns:
        str: –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    """
    if language not in TRANSLATIONS:
        language = 'ru'  # Fallback –∫ —Ä—É—Å—Å–∫–æ–º—É
    
    text = TRANSLATIONS[language].get(key, key)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    if kwargs:
        try:
            text = text.format(**kwargs)
        except (KeyError, ValueError):
            pass  # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    
    return text

def get_language_settings():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    
    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —è–∑—ã–∫–∞
    """
    import os
    return {
        'interface': os.getenv('INTERFACE_LANGUAGE', 'ru'),
        'output': os.getenv('OUTPUT_LANGUAGE', 'ru'),
        'first_startup': os.getenv('FIRST_STARTUP_LANGUAGE_SELECTION', 'true').lower() == 'true'
    }

def save_language_settings(interface_lang, output_lang):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞ –≤ .env —Ñ–∞–π–ª
    
    Args:
        interface_lang (str): –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        output_lang (str): –Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞
    """
    import os
    from dotenv import set_key
    
    env_file = '.env'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    set_key(env_file, 'INTERFACE_LANGUAGE', interface_lang)
    set_key(env_file, 'OUTPUT_LANGUAGE', output_lang)
    set_key(env_file, 'FIRST_STARTUP_LANGUAGE_SELECTION', 'false')

def show_language_selection():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    
    Returns:
        tuple: (interface_language, output_language)
    """
    print("=" * 50)
    print("üåç Language Selection / –í—ã–±–æ—Ä —è–∑—ã–∫–∞")
    print("=" * 50)
    
    # –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    print("\n1. Select interface language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:")
    print("   1) –†—É—Å—Å–∫–∏–π (Russian)")
    print("   2) English")
    
    while True:
        try:
            choice = input("\nYour choice / –í–∞—à –≤—ã–±–æ—Ä (1-2): ").strip()
            if choice == '1':
                interface_lang = 'ru'
                break
            elif choice == '2':
                interface_lang = 'en'
                break
            else:
                print("‚ùå Invalid choice / –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. Please select 1 or 2 / –í—ã–±–µ—Ä–∏—Ç–µ 1 –∏–ª–∏ 2")
        except (ValueError, KeyboardInterrupt):
            interface_lang = 'ru'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π
            break
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    print(f"\n‚úÖ {get_text('language_saved', interface_lang)}")
    
    # –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ AI
    print(f"\n2. {get_text('select_output_language', interface_lang)}")
    print(f"   1) {get_text('russian', interface_lang)}")
    print(f"   2) {get_text('english', interface_lang)}")
    
    while True:
        try:
            choice = input(f"\n{get_text('select_voice', interface_lang)} (1-2): ").strip()
            if choice == '1':
                output_lang = 'ru'
                break
            elif choice == '2':
                output_lang = 'en'
                break
            else:
                print(f"‚ùå {get_text('invalid_choice', interface_lang)}")
        except (ValueError, KeyboardInterrupt):
            output_lang = interface_lang  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–∞–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            break
    
    print(f"\n‚úÖ {get_text('settings_saved', interface_lang)}")
    print("=" * 50)
    
    return interface_lang, output_lang

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö –∫ AI
def translate_prompt_for_ai(prompt, target_language='en'):
    """
    –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è AI –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —è–∑—ã–∫ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
    
    Args:
        prompt (str): –ò—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        target_language (str): –¶–µ–ª–µ–≤–æ–π —è–∑—ã–∫
    
    Returns:
        str: –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–π –∏–ª–∏ –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    """
    if target_language == 'en':
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
        return f"Answer in English. {prompt}"
    elif target_language == 'ru':
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º
        return f"–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. {prompt}"
    else:
        return prompt
